/****** HEADER ******/ 
.header { 
  /* At every point of view it will take 95% of the view port*/
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)),
                    url(../img/hero-small.jpg);
  /* What cover does is that whatever the width of the viewport, or the element, it'll always try to fit
    the element inside of the box. */
  background-size: cover;
  background-position: top;

  /* Always put position relative 'cause it's the parent */
  position: relative;

  // * Use supports when some attribute is not supported for other browsers in this case safari
  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)){
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  }

  // * Show the big image for high resolution devices like apple's ones (webkit for safari)
  // * For including high-res graphics or images, but only for screens that can make use of them. “Retina” being “2x”:
  @media (min-resolution: 192dpi) and (min-width: 600px),
         (-webkit-min-device-pixel-ratio: 2) and (min-width: 600px),
         (min-width: 2000px) {
    background-image: linear-gradient(to right bottom, rgba($color-secondary-light, 0.8), rgba($color-secondary-dark, 0.8)),
                      url(../img/hero.jpg);
  }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    /* We can play with position, the origin reference it's the parent */
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    /* The width of the image is handled by the browser */
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* Transform is used for: translate the position of an element itself*/
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
