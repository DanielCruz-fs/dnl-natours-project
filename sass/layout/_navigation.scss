.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, .1);
    text-align: center;
    cursor: pointer;
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient($color-primary-light, $color-primary-dark);
    z-index: 1000;
    transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);
    
    // For testing purposes
    // transform: scale(80);
  }

  &__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    // For nav direction entrance
    // right: 0;
    left: 0;
    z-index: 1500;

    // to fake a display none
    opacity: 0;
    width: 0;
    // Cubic functions references: https://cubic-bezier.com/#.14,1.47,.26,-0.26 https://easings.net/
    transition: all .8s cubic-bezier(0.86, -0.55, 0.256, 1.55);
  }

  &__list {
    // Here we do not need position realative 'cause the parent is position fixed
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {
    &:link, &:visited {
      // Unordred lists must be inline-block so padding and transform properties can work
      display: inline-block;
      // Padding trick: always use doble for sides, it looks cool
      padding: 1rem 2rem;
      font-size: 3rem;
      font-weight: 300;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
      background-size: 225%;
      transition: all .3s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:active, &:hover {
      background-position: 100%;
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  // Functionality
  // Checkbox trick to  make the cool navigation
  &__checkbox:checked ~ &__background {
    transform: scale(80);
  }

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }

  // Icon functionality
  &__icon {
    position: relative;
    margin-top: 3.5rem;

    &, &::before, &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-gray-dark-3;
      // Pseudo to worl we need to set the display property
      display: inline-block;
    }

    // In order to pseudo classes to work:
    &::before, &::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all .2s;
    }

    &::before { top: -.8rem; }
    &::after { top: .8rem; }
  }

  &__button:hover &__icon::before { top: -1rem; }
  &__button:hover &__icon::after { top: 1rem; }

  &__checkbox:checked + &__button &__icon { background-color: transparent; }

  &__checkbox:checked + &__button &__icon::before { 
    top: 0;
    transform: rotate(135deg)
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg)
  }
}
